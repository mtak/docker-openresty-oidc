worker_processes 1;

events { worker_connections 1024; }

http {
    lua_package_path "/usr/local/share/lua/5.1/?.lua;;";
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 2;

    server {
        listen 443 ssl;
        server_name yourdomain.com;

        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        location / {
            access_by_lua_block {
                local opts = {
                    redirect_uri = "https://yourdomain.com/auth/callback",
                    discovery = "https://login.microsoftonline.com/YOUR_TENANT_ID/v2.0/.well-known/openid-configuration",
                    client_id = "YOUR_CLIENT_ID",
                    client_secret = "YOUR_CLIENT_SECRET",
                    scope = "openid profile email",
                    ssl_verify = "no"
                }

                local res, err = require("resty.openidc").authenticate(opts)
                if err then
                    ngx.status = 500
                    ngx.say("Authentication failed: " .. err)
                    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
                end
            }

            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth/callback {
            content_by_lua_block {
                local opts = {
                    redirect_uri = "https://yourdomain.com/auth/callback",
                    discovery = "https://login.microsoftonline.com/YOUR_TENANT_ID/v2.0/.well-known/openid-configuration",
                    client_id = "YOUR_CLIENT_ID",
                    client_secret = "YOUR_CLIENT_SECRET"
                }
                require("resty.openidc").authenticate(opts)
            }
        }
    }
}

